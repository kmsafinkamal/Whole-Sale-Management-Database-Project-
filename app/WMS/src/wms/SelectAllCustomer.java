/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wms;

import com.mysql.jdbc.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;

/**
 *
 * @author Guest_all
 */
public class SelectAllCustomer extends javax.swing.JFrame {
    
    
    String sqlid="root";
    String sqlpass="safinisaboy";
    /**
     * Creates new form SelectAllCustomer
     */
    public SelectAllCustomer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();

        jButton7.setText("jButton7");

        jButton8.setText("jButton8");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Wholesale Management System");

        jButton1.setText("Search By ASC Name");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Search By DESC Name");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Customer who has due payment");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Customers who have no email Id");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("maximum price of product from each category");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText(" Total sales");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton9.setText(" Most selling product");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText(" Products that have not delivered yet");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText(" Customer who has paid more than average payment");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Delivery man of a specific product");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("Delivery man who has never delivered");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("Customers  who only buy specific items");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setText("Customer who has got product");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jLabel2.setText("Product Name");

        jLabel3.setText("Product Category");

        jButton16.setText("Customer Table");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setText(" Product Table");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton20.setText("Delivery man Table");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jButton21.setText("Payment Table");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Insert to Table");

        jButton18.setText("Customer");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setText("Product");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Show");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 10, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(59, 59, 59))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jSeparator2)
                                .addGap(31, 31, 31))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButton18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                                    .addComponent(jButton21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jSeparator3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                            .addComponent(jButton15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5)
                        .addGap(24, 24, 24)
                        .addComponent(jButton6)
                        .addGap(18, 18, 18)
                        .addComponent(jButton9)
                        .addGap(18, 18, 18)
                        .addComponent(jButton10)
                        .addGap(15, 15, 15)
                        .addComponent(jButton15)
                        .addGap(18, 18, 18)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jButton16)
                                .addGap(18, 18, 18)
                                .addComponent(jButton17)
                                .addGap(72, 72, 72))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton20)))
                        .addGap(31, 31, 31)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addGap(7, 7, 7)
                        .addComponent(jButton18)
                        .addGap(9, 9, 9)
                        .addComponent(jButton19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton12)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jButton13)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton14)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            String QUERY = "select * from customer natural join email, phone_number where customer.Customer_ID = phone_number.Customer_ID order by Customer_name asc";
            Class.forName("com.mysql.jdbc.Driver"); //Register the mysql driver
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/wholesalemanagementsystem",""+ sqlid+ "",""+ sqlpass+ "");
            Statement stmt = (Statement) con1.createStatement();
            ResultSet rs = stmt.executeQuery(QUERY);
          
         ArrayList<String[]> dataTable = new ArrayList<String[]>();
         
         while(rs.next()){
            String[] dataRow = new String[8];
            dataRow[0]=" "+rs.getString(1);
            dataRow[1]=rs.getString(2);
            dataRow[2]=rs.getString(3);
            dataRow[3]=rs.getString(4);
            dataRow[4]=rs.getString(5);
            dataRow[5]=rs.getString(6);
            dataRow[6]=rs.getString(7);
            dataRow[7]=rs.getString(8);
            dataTable.add(dataRow);
         }
         
               System.out.println(dataTable.get(0)[0]);
         String[][] data2 = new String[dataTable.size()][8];
         for (int i = 0; i < dataTable.size(); i++) {
            for (int j = 0; j < 8; j++) {
               data2[i][j] = dataTable.get(i)[j];
            }
        }
         
         JFrame f2;
        f2 = new JFrame();
        String column[] = {"Customer Id", "Customer Name", "Street", "City", "State",
            "Birth Date", "Email", "Phone"};
        JTable jt = new JTable(data2, column);
        f2.setExtendedState(JFrame.MAXIMIZED_BOTH);
        jt.setAutoscrolls(true);
        //jt.setBounds(30,40,200,300);          
        JScrollPane sp = new JScrollPane(jt);
        f2.add(sp);
        jt.getColumnModel().getColumn(0).setPreferredWidth(60);
        jt.getColumnModel().getColumn(1).setPreferredWidth(130);
        jt.getColumnModel().getColumn(2).setPreferredWidth(80);
        jt.getColumnModel().getColumn(3).setPreferredWidth(80);
        jt.getColumnModel().getColumn(4).setPreferredWidth(80);
        jt.getColumnModel().getColumn(5).setPreferredWidth(80);
        jt.getColumnModel().getColumn(6).setPreferredWidth(160);
        jt.getColumnModel().getColumn(7).setPreferredWidth(160);
        
        jt.setColumnSelectionAllowed(true);
        jt.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        f2.setTitle("Customer List Asc Order");
        f2.setVisible(true);
      } catch (SQLException e) {
         e.printStackTrace();
      } catch (ClassNotFoundException ex) {
            Logger.getLogger(SelectAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       try {
            String QUERY = "select * from customer natural join email, phone_number where customer.Customer_ID = phone_number.Customer_ID order by Customer_name desc";
            Class.forName("com.mysql.jdbc.Driver"); //Register the mysql driver
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/wholesalemanagementsystem",""+ sqlid+ "",""+ sqlpass+ "");
           Statement stmt = (Statement) con1.createStatement();
            ResultSet rs = stmt.executeQuery(QUERY);
          
         ArrayList<String[]> dataTable = new ArrayList<String[]>();
         
         while(rs.next()){
            String[] dataRow = new String[8];
            dataRow[0]=" "+rs.getString(1);
            dataRow[1]=rs.getString(2);
            dataRow[2]=rs.getString(3);
            dataRow[3]=rs.getString(4);
            dataRow[4]=rs.getString(5);
            dataRow[5]=rs.getString(6);
            dataRow[6]=rs.getString(7);
            dataRow[7]=rs.getString(8);
            dataTable.add(dataRow);
         }
         
               System.out.println(dataTable.get(0)[0]);
         String[][] data2 = new String[dataTable.size()][8];
         for (int i = 0; i < dataTable.size(); i++) {
            for (int j = 0; j < 8; j++) {
               data2[i][j] = dataTable.get(i)[j];
            }
        }
         
         JFrame f2;
        f2 = new JFrame();
        String column[] = {"Customer Id", "Customer Name", "Street", "City", "State",
            "Birth Date", "Email", "Phone"};
        JTable jt = new JTable(data2, column);
        f2.setExtendedState(JFrame.MAXIMIZED_BOTH);
        jt.setAutoscrolls(true);
        //jt.setBounds(30,40,200,300);          
        JScrollPane sp = new JScrollPane(jt);
        f2.add(sp);
        jt.getColumnModel().getColumn(0).setPreferredWidth(60);
        jt.getColumnModel().getColumn(1).setPreferredWidth(130);
        jt.getColumnModel().getColumn(2).setPreferredWidth(80);
        jt.getColumnModel().getColumn(3).setPreferredWidth(80);
        jt.getColumnModel().getColumn(4).setPreferredWidth(80);
        jt.getColumnModel().getColumn(5).setPreferredWidth(80);
        jt.getColumnModel().getColumn(6).setPreferredWidth(160);
        jt.getColumnModel().getColumn(7).setPreferredWidth(160);
        
        jt.setColumnSelectionAllowed(true);
        jt.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        f2.setTitle("Customer List Desc Order");
        f2.setVisible(true);
      } catch (SQLException e) {
         e.printStackTrace();
      } catch (ClassNotFoundException ex) {
            Logger.getLogger(SelectAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         try {
            String QUERY = "select Customer_name,Customer_ID from customer natural join payment where Payment_status = 'No'";
            Class.forName("com.mysql.jdbc.Driver"); //Register the mysql driver
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/wholesalemanagementsystem",""+ sqlid+ "",""+ sqlpass+ "");
           Statement stmt = (Statement) con1.createStatement();
            ResultSet rs = stmt.executeQuery(QUERY);
          
         ArrayList<String[]> dataTable = new ArrayList<String[]>();
         
         while(rs.next()){
            String[] dataRow = new String[2];
            dataRow[0]=rs.getString(2);
            dataRow[1]=rs.getString(1);
            dataTable.add(dataRow);
         }
         
               System.out.println(dataTable.get(0)[0]);
         String[][] data2 = new String[dataTable.size()][2];
         for (int i = 0; i < dataTable.size(); i++) {
            for (int j = 0; j < 2; j++) {
               data2[i][j] = dataTable.get(i)[j];
            }
        }
         
         JFrame f2;
        f2 = new JFrame();
        String column[] = { "Customer Id","Customer Name"};
        JTable jt = new JTable(data2, column);
        f2.setExtendedState(JFrame.MAXIMIZED_BOTH);
        jt.setAutoscrolls(true);
        //jt.setBounds(30,40,200,300);          
        JScrollPane sp = new JScrollPane(jt);
        f2.add(sp);
        jt.getColumnModel().getColumn(0).setPreferredWidth(80);
        jt.getColumnModel().getColumn(1).setPreferredWidth(150);
        
        jt.setColumnSelectionAllowed(true);
        jt.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        f2.setTitle("Customer who has due payment");
        f2.setVisible(true);
      } catch (SQLException e) {
         e.printStackTrace();
      } catch (ClassNotFoundException ex) {
            Logger.getLogger(SelectAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            String QUERY = "select Customer_name,Customer_ID from customer natural join email where Email_address='NULL'";
            Class.forName("com.mysql.jdbc.Driver"); //Register the mysql driver
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/wholesalemanagementsystem",""+ sqlid+ "",""+ sqlpass+ "");
           Statement stmt = (Statement) con1.createStatement();
            ResultSet rs = stmt.executeQuery(QUERY);
          
         ArrayList<String[]> dataTable = new ArrayList<String[]>();
         
         while(rs.next()){
            String[] dataRow = new String[2];
            dataRow[0]=rs.getString(2);
            dataRow[1]=rs.getString(1);
            dataTable.add(dataRow);
         }
         
               System.out.println(dataTable.get(0)[0]);
         String[][] data2 = new String[dataTable.size()][2];
         for (int i = 0; i < dataTable.size(); i++) {
            for (int j = 0; j < 2; j++) {
               data2[i][j] = dataTable.get(i)[j];
            }
        }
         
         JFrame f2;
        f2 = new JFrame();
        String column[] = { "Customer Id","Customer Name"};
        JTable jt = new JTable(data2, column);
        f2.setExtendedState(JFrame.MAXIMIZED_BOTH);
        jt.setAutoscrolls(true);
        //jt.setBounds(30,40,200,300);          
        JScrollPane sp = new JScrollPane(jt);
        f2.add(sp);
        jt.getColumnModel().getColumn(0).setPreferredWidth(80);
        jt.getColumnModel().getColumn(1).setPreferredWidth(150);
        
        jt.setColumnSelectionAllowed(true);
        jt.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        f2.setTitle("Customer who has due payment");
        f2.setVisible(true);
      } catch (SQLException e) {
         e.printStackTrace();
      } catch (ClassNotFoundException ex) {
            Logger.getLogger(SelectAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
         try {
            String QUERY = "select Catagory, max(Unit_price) from product group by Catagory";
            Class.forName("com.mysql.jdbc.Driver"); //Register the mysql driver
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/wholesalemanagementsystem",""+ sqlid+ "",""+ sqlpass+ "");
           Statement stmt = (Statement) con1.createStatement();
            ResultSet rs = stmt.executeQuery(QUERY);
          
         ArrayList<String[]> dataTable = new ArrayList<String[]>();
         
         while(rs.next()){
            String[] dataRow = new String[2];
            dataRow[0]=rs.getString(1);
            dataRow[1]=rs.getString(2);
            dataTable.add(dataRow);
         }
         
               System.out.println(dataTable.get(0)[0]);
         String[][] data2 = new String[dataTable.size()][2];
         for (int i = 0; i < dataTable.size(); i++) {
            for (int j = 0; j < 2; j++) {
               data2[i][j] = dataTable.get(i)[j];
            }
        }
         
         JFrame f2;
        f2 = new JFrame();
        String column[] = { "Catagory","Max (unit Price)"};
        JTable jt = new JTable(data2, column);
        f2.setExtendedState(JFrame.MAXIMIZED_BOTH);
        jt.setAutoscrolls(true);
        //jt.setBounds(30,40,200,300);          
        JScrollPane sp = new JScrollPane(jt);
        f2.add(sp);
        jt.getColumnModel().getColumn(0).setPreferredWidth(150);
        jt.getColumnModel().getColumn(1).setPreferredWidth(150);
        
        jt.setColumnSelectionAllowed(true);
        jt.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        f2.setTitle("Maximum Unit Price");
        f2.setVisible(true);
      } catch (SQLException e) {
         e.printStackTrace();
      } catch (ClassNotFoundException ex) {
            Logger.getLogger(SelectAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            String QUERY = "select sum(payment_amount) from payment where Payment_status = \"yes\"";
            Class.forName("com.mysql.jdbc.Driver"); //Register the mysql driver
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/wholesalemanagementsystem",""+ sqlid+ "",""+ sqlpass+ "");
           Statement stmt = (Statement) con1.createStatement();
            ResultSet rs = stmt.executeQuery(QUERY);
          
         ArrayList<String[]> dataTable = new ArrayList<String[]>();
         
         while(rs.next()){
            String[] dataRow = new String[1];
            dataRow[0]=rs.getString(1);
            dataTable.add(dataRow);
         }
         
               System.out.println(dataTable.get(0)[0]);
         String[][] data2 = new String[dataTable.size()][1];
         for (int i = 0; i < dataTable.size(); i++) {
            for (int j = 0; j < 1; j++) {
               data2[i][j] = dataTable.get(i)[j];
            }
        }
         
         JFrame f2;
        f2 = new JFrame();
        String column[] = { "Total Sales"};
        JTable jt = new JTable(data2, column);
        f2.setExtendedState(JFrame.MAXIMIZED_BOTH);
        jt.setAutoscrolls(true);
        //jt.setBounds(30,40,200,300);          
        JScrollPane sp = new JScrollPane(jt);
        f2.add(sp);
        jt.getColumnModel().getColumn(0).setPreferredWidth(150);
        
        jt.setColumnSelectionAllowed(true);
        jt.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        f2.setTitle("Total sales");
        f2.setVisible(true);
      } catch (SQLException e) {
         e.printStackTrace();
      } catch (ClassNotFoundException ex) {
            Logger.getLogger(SelectAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
         try {
            String QUERY = "select product_ID, max(countpro) from(select Product_ID, count(product_ID) from product_order group by Product_ID) as newtable(product_ID, countpro)";
            Class.forName("com.mysql.jdbc.Driver"); //Register the mysql driver
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/wholesalemanagementsystem",""+ sqlid+ "",""+ sqlpass+ "");
           Statement stmt = (Statement) con1.createStatement();
            ResultSet rs = stmt.executeQuery(QUERY);
          
         ArrayList<String[]> dataTable = new ArrayList<String[]>();
         
         while(rs.next()){
            String[] dataRow = new String[2];
            dataRow[0]=rs.getString(1);
            dataRow[1]=rs.getString(2);
            dataTable.add(dataRow);
         }
         
               System.out.println(dataTable.get(0)[0]);
         String[][] data2 = new String[dataTable.size()][2];
         for (int i = 0; i < dataTable.size(); i++) {
            for (int j = 0; j < 2; j++) {
               data2[i][j] = dataTable.get(i)[j];
            }
        }
         
         JFrame f2;
        f2 = new JFrame();
        String column[] = { "Product ID","Max Unit Sell"};
        JTable jt = new JTable(data2, column);
        f2.setExtendedState(JFrame.MAXIMIZED_BOTH);
        jt.setAutoscrolls(true);
        //jt.setBounds(30,40,200,300);          
        JScrollPane sp = new JScrollPane(jt);
        f2.add(sp);
        jt.getColumnModel().getColumn(0).setPreferredWidth(150);
        jt.getColumnModel().getColumn(1).setPreferredWidth(150);
        
        jt.setColumnSelectionAllowed(true);
        jt.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        f2.setTitle("Most Selling Product");
        f2.setVisible(true);
      } catch (SQLException e) {
         e.printStackTrace();
      } catch (ClassNotFoundException ex) {
            Logger.getLogger(SelectAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        try {
            String QUERY = "select Customer_ID, Customer_name, Payment_amount from payment natural join customer where Payment_amount >  (select avg(Payment_amount) from payment)";
            Class.forName("com.mysql.jdbc.Driver"); //Register the mysql driver
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/wholesalemanagementsystem",""+ sqlid+ "",""+ sqlpass+ "");
           Statement stmt = (Statement) con1.createStatement();
            ResultSet rs = stmt.executeQuery(QUERY);
          
         ArrayList<String[]> dataTable = new ArrayList<String[]>();
         
         while(rs.next()){
            String[] dataRow = new String[3];
            dataRow[0]=rs.getString(1);
            dataRow[1]=rs.getString(2);
            dataRow[2]=rs.getString(3);
            dataTable.add(dataRow);
         }
         
               System.out.println(dataTable.get(0)[0]);
         String[][] data2 = new String[dataTable.size()][3];
         for (int i = 0; i < dataTable.size(); i++) {
            for (int j = 0; j < 3; j++) {
               data2[i][j] = dataTable.get(i)[j];
            }
        }
         
         JFrame f2;
        f2 = new JFrame();
        String column[] = { "Customer ID","Customer Name","Paid Amount"};
        JTable jt = new JTable(data2, column);
        f2.setExtendedState(JFrame.MAXIMIZED_BOTH);
        jt.setAutoscrolls(true);
        //jt.setBounds(30,40,200,300);          
        JScrollPane sp = new JScrollPane(jt);
        f2.add(sp);
        jt.getColumnModel().getColumn(0).setPreferredWidth(150);
        jt.getColumnModel().getColumn(1).setPreferredWidth(150);
        jt.getColumnModel().getColumn(2).setPreferredWidth(150);
        
        jt.setColumnSelectionAllowed(true);
        jt.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        f2.setTitle(" Customer who has paid more than average payment");
        f2.setVisible(true);
      } catch (SQLException e) {
         e.printStackTrace();
      } catch (ClassNotFoundException ex) {
            Logger.getLogger(SelectAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        String product = jTextField1.getText();
        try {
            String QUERY = "select Delivery_man_ID, Delivery_man_name from delivery_man where Delivery_man_ID = ( select Delivery_man_Delivery_man_ID from Delivery, Product_delivery where Delivery_Delivery_ID = delivery_ID and Product_Product_ID = (select product_ID from product where product_name = '"
                    + product
                    + "'))";
           Class.forName("com.mysql.jdbc.Driver"); //Register the mysql driver
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/wholesalemanagementsystem",""+ sqlid+ "",""+ sqlpass+ "");
           Statement stmt = (Statement) con1.createStatement();
            ResultSet rs = stmt.executeQuery(QUERY);
          
         ArrayList<String[]> dataTable = new ArrayList<String[]>();
         
         while(rs.next()){
            String[] dataRow = new String[2];
            dataRow[0]=rs.getString(1);
            dataRow[1]=rs.getString(2);
            dataTable.add(dataRow);
         }
         
               System.out.println(dataTable.get(0)[0]);
         String[][] data2 = new String[dataTable.size()][2];
         for (int i = 0; i < dataTable.size(); i++) {
            for (int j = 0; j < 2; j++) {
               data2[i][j] = dataTable.get(i)[j];
            }
        }
         
         JFrame f2;
        f2 = new JFrame();
        String column[] = { "Delivery ID","Product ID"};
        JTable jt = new JTable(data2, column);
        f2.setExtendedState(JFrame.MAXIMIZED_BOTH);
        jt.setAutoscrolls(true);
        //jt.setBounds(30,40,200,300);          
        JScrollPane sp = new JScrollPane(jt);
        f2.add(sp);
        jt.getColumnModel().getColumn(0).setPreferredWidth(150);
        jt.getColumnModel().getColumn(1).setPreferredWidth(150);
        
        jt.setColumnSelectionAllowed(true);
        jt.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        f2.setTitle("Delivery man of: "+product);
        f2.setVisible(true);
      } catch (SQLException e) {
         e.printStackTrace();
      } catch (ClassNotFoundException ex) {
            Logger.getLogger(SelectAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        try {
            String QUERY = "select distinct Delivery_ID, Product_Product_ID from delivery, product_delivery where Delivery_status = \"No\" and Delivery_Delivery_ID = Delivery_ID";
            Class.forName("com.mysql.jdbc.Driver"); //Register the mysql driver
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/wholesalemanagementsystem",""+ sqlid+ "",""+ sqlpass+ "");
           Statement stmt = (Statement) con1.createStatement();
            ResultSet rs = stmt.executeQuery(QUERY);
          
         ArrayList<String[]> dataTable = new ArrayList<String[]>();
         
         while(rs.next()){
            String[] dataRow = new String[2];
            dataRow[0]=rs.getString(1);
            dataRow[1]=rs.getString(2);
            dataTable.add(dataRow);
         }
         
               System.out.println(dataTable.get(0)[0]);
         String[][] data2 = new String[dataTable.size()][2];
         for (int i = 0; i < dataTable.size(); i++) {
            for (int j = 0; j < 2; j++) {
               data2[i][j] = dataTable.get(i)[j];
            }
        }
         
         JFrame f2;
        f2 = new JFrame();
        String column[] = { "Delivery ID","Product ID"};
        JTable jt = new JTable(data2, column);
        f2.setExtendedState(JFrame.MAXIMIZED_BOTH);
        jt.setAutoscrolls(true);
        //jt.setBounds(30,40,200,300);          
        JScrollPane sp = new JScrollPane(jt);
        f2.add(sp);
        jt.getColumnModel().getColumn(0).setPreferredWidth(150);
        jt.getColumnModel().getColumn(1).setPreferredWidth(150);
        
        jt.setColumnSelectionAllowed(true);
        jt.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        f2.setTitle("Undelivered Product");
        f2.setVisible(true);
      } catch (SQLException e) {
         e.printStackTrace();
      } catch (ClassNotFoundException ex) {
            Logger.getLogger(SelectAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        try {
            String QUERY = "select Customer_ID, Customer_name from customer_order natural join customer where order_ID in (select order_ID from delivery where Delivery_status = \"Yes\")";
            Class.forName("com.mysql.jdbc.Driver"); //Register the mysql driver
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/wholesalemanagementsystem",""+ sqlid+ "",""+ sqlpass+ "");
           Statement stmt = (Statement) con1.createStatement();
            ResultSet rs = stmt.executeQuery(QUERY);
          
         ArrayList<String[]> dataTable = new ArrayList<String[]>();
         
         while(rs.next()){
            String[] dataRow = new String[2];
            dataRow[0]=rs.getString(1);
            dataRow[1]=rs.getString(2);
            dataTable.add(dataRow);
         }
         
               System.out.println(dataTable.get(0)[0]);
         String[][] data2 = new String[dataTable.size()][2];
         for (int i = 0; i < dataTable.size(); i++) {
            for (int j = 0; j < 2; j++) {
               data2[i][j] = dataTable.get(i)[j];
            }
        }
         
         JFrame f2;
        f2 = new JFrame();
        String column[] = { "Customer ID","Customer Name"};
        JTable jt = new JTable(data2, column);
        f2.setExtendedState(JFrame.MAXIMIZED_BOTH);
        jt.setAutoscrolls(true);
        //jt.setBounds(30,40,200,300);          
        JScrollPane sp = new JScrollPane(jt);
        f2.add(sp);
        jt.getColumnModel().getColumn(0).setPreferredWidth(150);
        jt.getColumnModel().getColumn(1).setPreferredWidth(150);
        
        jt.setColumnSelectionAllowed(true);
        jt.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        f2.setTitle("Customers who have received product");
        f2.setVisible(true);
      } catch (SQLException e) {
         e.printStackTrace();
      } catch (ClassNotFoundException ex) {
            Logger.getLogger(SelectAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        try {
            String QUERY = "select Delivery_man_ID, Delivery_man_name from delivery_man where not exists (select Delivery_man_Delivery_man_ID from delivery where Delivery_status = 'Yes' and Delivery_man_ID=Delivery_man_Delivery_man_ID)";
            Class.forName("com.mysql.jdbc.Driver"); //Register the mysql driver
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/wholesalemanagementsystem",""+ sqlid+ "",""+ sqlpass+ "");
           Statement stmt = (Statement) con1.createStatement();
            ResultSet rs = stmt.executeQuery(QUERY);
          
         ArrayList<String[]> dataTable = new ArrayList<String[]>();
         
         while(rs.next()){
            String[] dataRow = new String[2];
            dataRow[0]=rs.getString(1);
            dataRow[1]=rs.getString(2);
            dataTable.add(dataRow);
         }
         
               System.out.println(dataTable.get(0)[0]);
         String[][] data2 = new String[dataTable.size()][2];
         for (int i = 0; i < dataTable.size(); i++) {
            for (int j = 0; j < 2; j++) {
               data2[i][j] = dataTable.get(i)[j];
            }
        }
         
         JFrame f2;
        f2 = new JFrame();
        String column[] = { "Delivery Man ID","Delivery Man Name"};
        JTable jt = new JTable(data2, column);
        f2.setExtendedState(JFrame.MAXIMIZED_BOTH);
        jt.setAutoscrolls(true);
        //jt.setBounds(30,40,200,300);          
        JScrollPane sp = new JScrollPane(jt);
        f2.add(sp);
        jt.getColumnModel().getColumn(0).setPreferredWidth(150);
        jt.getColumnModel().getColumn(1).setPreferredWidth(150);
        
        jt.setColumnSelectionAllowed(true);
        jt.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        f2.setTitle("Delivey man who has not delivered any product");
        f2.setVisible(true);
      } catch (SQLException e) {
         e.printStackTrace();
      } catch (ClassNotFoundException ex) {
            Logger.getLogger(SelectAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        String productCata = jTextField2.getText();
        try {
            String QUERY = "select customer_ID, customer_name from customer_order natural join customer where order_ID in (select order_order_ID from product_order natural join product where Catagory = '"
                    + productCata
                    + "')";
           Class.forName("com.mysql.jdbc.Driver"); //Register the mysql driver
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/wholesalemanagementsystem",""+ sqlid+ "",""+ sqlpass+ "");
           Statement stmt = (Statement) con1.createStatement();
            ResultSet rs = stmt.executeQuery(QUERY);
          
         ArrayList<String[]> dataTable = new ArrayList<String[]>();
         
         while(rs.next()){
            String[] dataRow = new String[2];
            dataRow[0]=rs.getString(1);
            dataRow[1]=rs.getString(2);
            dataTable.add(dataRow);
         }
         
               System.out.println(dataTable.get(0)[0]);
         String[][] data2 = new String[dataTable.size()][2];
         for (int i = 0; i < dataTable.size(); i++) {
            for (int j = 0; j < 2; j++) {
               data2[i][j] = dataTable.get(i)[j];
            }
        }
         
         JFrame f2;
        f2 = new JFrame();
        String column[] = { "Customer ID","Customer Name"};
        JTable jt = new JTable(data2, column);
        f2.setExtendedState(JFrame.MAXIMIZED_BOTH);
        jt.setAutoscrolls(true);
        //jt.setBounds(30,40,200,300);          
        JScrollPane sp = new JScrollPane(jt);
        f2.add(sp);
        jt.getColumnModel().getColumn(0).setPreferredWidth(150);
        jt.getColumnModel().getColumn(1).setPreferredWidth(150);
        
        jt.setColumnSelectionAllowed(true);
        jt.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        f2.setTitle("Customer who buy "+productCata+ "only");
        f2.setVisible(true);
      } catch (SQLException e) {
         e.printStackTrace();
      } catch (ClassNotFoundException ex) {
            Logger.getLogger(SelectAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
       try {
            String QUERY = "select * from product";
            Class.forName("com.mysql.jdbc.Driver"); //Register the mysql driver
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/wholesalemanagementsystem",""+ sqlid+ "",""+ sqlpass+ "");
           Statement stmt = (Statement) con1.createStatement();
            ResultSet rs = stmt.executeQuery(QUERY);
          
         ArrayList<String[]> dataTable = new ArrayList<String[]>();
         
         while(rs.next()){
            String[] dataRow = new String[6];
            dataRow[0]=rs.getString(1);
            dataRow[1]=rs.getString(2);
            dataRow[2]=rs.getString(3);
            dataRow[3]=rs.getString(4);
            dataRow[4]=rs.getString(6);
            dataTable.add(dataRow);
         }
         
               System.out.println(dataTable.get(0)[0]);
         String[][] data2 = new String[dataTable.size()][5];
         for (int i = 0; i < dataTable.size(); i++) {
            for (int j = 0; j < 5; j++) {
               data2[i][j] = dataTable.get(i)[j];
            }
        }
         
         JFrame f2;
        f2 = new JFrame();
        String column[] = { "Product ID","Product Name","Category","Unit price","Quantity"};
        JTable jt = new JTable(data2, column);
        f2.setExtendedState(JFrame.MAXIMIZED_BOTH);
        jt.setAutoscrolls(true);
        //jt.setBounds(30,40,200,300);          
        JScrollPane sp = new JScrollPane(jt);
        f2.add(sp);
        jt.getColumnModel().getColumn(0).setPreferredWidth(150);
        jt.getColumnModel().getColumn(1).setPreferredWidth(150);
        jt.getColumnModel().getColumn(2).setPreferredWidth(150);
        jt.getColumnModel().getColumn(3).setPreferredWidth(150);
        jt.getColumnModel().getColumn(4).setPreferredWidth(150);
        
        jt.setColumnSelectionAllowed(true);
        jt.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        f2.setTitle("Product Table");
        f2.setVisible(true);
      } catch (SQLException e) {
         e.printStackTrace();
      } catch (ClassNotFoundException ex) {
            Logger.getLogger(SelectAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
       try {
            String QUERY = "select * from payment";
            Class.forName("com.mysql.jdbc.Driver"); //Register the mysql driver
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/wholesalemanagementsystem",""+ sqlid+ "",""+ sqlpass+ "");
           Statement stmt = (Statement) con1.createStatement();
            ResultSet rs = stmt.executeQuery(QUERY);
          
         ArrayList<String[]> dataTable = new ArrayList<String[]>();
         
         while(rs.next()){
            String[] dataRow = new String[5];
            dataRow[0]=rs.getString(1);
            dataRow[1]=rs.getString(2);
            dataRow[2]=rs.getString(3);
            dataRow[3]=rs.getString(4);
            dataRow[4]=rs.getString(5);
            dataTable.add(dataRow);
         }
         
               System.out.println(dataTable.get(0)[0]);
         String[][] data2 = new String[dataTable.size()][5];
         for (int i = 0; i < dataTable.size(); i++) {
            for (int j = 0; j < 5; j++) {
               data2[i][j] = dataTable.get(i)[j];
            }
        }
         
         JFrame f2;
        f2 = new JFrame();
        String column[] = { "payment ID","payment amount","payment status","transaction ID","Customer ID"};
        JTable jt = new JTable(data2, column);
        f2.setExtendedState(JFrame.MAXIMIZED_BOTH);
        jt.setAutoscrolls(true);
        //jt.setBounds(30,40,200,300);          
        JScrollPane sp = new JScrollPane(jt);
        f2.add(sp);
        jt.getColumnModel().getColumn(0).setPreferredWidth(150);
        jt.getColumnModel().getColumn(1).setPreferredWidth(150);
        jt.getColumnModel().getColumn(2).setPreferredWidth(150);
        jt.getColumnModel().getColumn(3).setPreferredWidth(150);
        jt.getColumnModel().getColumn(4).setPreferredWidth(150);
        
        jt.setColumnSelectionAllowed(true);
        jt.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        f2.setTitle("Payment Table");
        f2.setVisible(true);
      } catch (SQLException e) {
         e.printStackTrace();
      } catch (ClassNotFoundException ex) {
            Logger.getLogger(SelectAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
         try {
            String QUERY = "select * from customer";
            Class.forName("com.mysql.jdbc.Driver"); //Register the mysql driver
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/wholesalemanagementsystem",""+ sqlid+ "",""+ sqlpass+ "");
           Statement stmt = (Statement) con1.createStatement();
            ResultSet rs = stmt.executeQuery(QUERY);
          
         ArrayList<String[]> dataTable = new ArrayList<String[]>();
         
         while(rs.next()){
            String[] dataRow = new String[6];
            dataRow[0]=rs.getString(1);
            dataRow[1]=rs.getString(2);
            dataRow[2]=rs.getString(3);
            dataRow[3]=rs.getString(4);
            dataRow[4]=rs.getString(5);
            dataRow[5]=rs.getString(6);
            dataTable.add(dataRow);
         }
         
               System.out.println(dataTable.get(0)[0]);
         String[][] data2 = new String[dataTable.size()][6];
         for (int i = 0; i < dataTable.size(); i++) {
            for (int j = 0; j < 6; j++) {
               data2[i][j] = dataTable.get(i)[j];
            }
        }
         
         JFrame f2;
        f2 = new JFrame();
        String column[] = { "Custome ID","Customer Name","Customer Street","Customer City","Customer State","Customer Birthdate"};
        JTable jt = new JTable(data2, column);
        f2.setExtendedState(JFrame.MAXIMIZED_BOTH);
        jt.setAutoscrolls(true);
        //jt.setBounds(30,40,200,300);          
        JScrollPane sp = new JScrollPane(jt);
        f2.add(sp);
        jt.getColumnModel().getColumn(0).setPreferredWidth(150);
        jt.getColumnModel().getColumn(1).setPreferredWidth(150);
        jt.getColumnModel().getColumn(2).setPreferredWidth(150);
        jt.getColumnModel().getColumn(3).setPreferredWidth(150);
        jt.getColumnModel().getColumn(4).setPreferredWidth(150);
        jt.getColumnModel().getColumn(5).setPreferredWidth(150);
        
        jt.setColumnSelectionAllowed(true);
        jt.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        f2.setTitle("Customer Table");
        f2.setVisible(true);
      } catch (SQLException e) {
         e.printStackTrace();
      } catch (ClassNotFoundException ex) {
            Logger.getLogger(SelectAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        try {
            String QUERY = "select * from delivery_man";
            Class.forName("com.mysql.jdbc.Driver"); //Register the mysql driver
           Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/wholesalemanagementsystem",""+ sqlid+ "",""+ sqlpass+ "");
            Statement stmt = (Statement) con1.createStatement();
            ResultSet rs = stmt.executeQuery(QUERY);
          
         ArrayList<String[]> dataTable = new ArrayList<String[]>();
         
         while(rs.next()){
            String[] dataRow = new String[4];
            dataRow[0]=rs.getString(1);
            dataRow[1]=rs.getString(2);
            dataRow[2]=rs.getString(3);
            dataRow[3]=rs.getString(4);
            dataTable.add(dataRow);
         }
         
               System.out.println(dataTable.get(0)[0]);
         String[][] data2 = new String[dataTable.size()][4];
         for (int i = 0; i < dataTable.size(); i++) {
            for (int j = 0; j < 4; j++) {
               data2[i][j] = dataTable.get(i)[j];
            }
        }
         
         JFrame f2;
        f2 = new JFrame();
        String column[] = { "Delivery man ID","Delivery man Name","Delivery man address","Delivery man birth date"};
        JTable jt = new JTable(data2, column);
        f2.setExtendedState(JFrame.MAXIMIZED_BOTH);
        jt.setAutoscrolls(true);
        //jt.setBounds(30,40,200,300);          
        JScrollPane sp = new JScrollPane(jt);
        f2.add(sp);
        jt.getColumnModel().getColumn(0).setPreferredWidth(150);
        jt.getColumnModel().getColumn(1).setPreferredWidth(150);
        jt.getColumnModel().getColumn(2).setPreferredWidth(150);
        jt.getColumnModel().getColumn(3).setPreferredWidth(150);
        
        jt.setColumnSelectionAllowed(true);
        jt.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        f2.setTitle("Delivery Man Table");
        f2.setVisible(true);
      } catch (SQLException e) {
         e.printStackTrace();
      } catch (ClassNotFoundException ex) {
            Logger.getLogger(SelectAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        CustomerInsert.main(null);
        this.setVisible(false);
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
         ProductInsert.main(null);
        this.setVisible(false);
    }//GEN-LAST:event_jButton19ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelectAllCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelectAllCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelectAllCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelectAllCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SelectAllCustomer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
